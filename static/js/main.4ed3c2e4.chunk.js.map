{"version":3,"sources":["components/TaskCreator.js","components/TaskRow.js","components/TaskTable.js","components/VisibilityControl.js","components/Container.js","App.js","index.js"],"names":["TaskCreator","_ref","createNewTask","_useState","useState","_useState2","_slicedToArray","newTaskName","setNewTaskName","React","createElement","onSubmit","e","preventDefault","handleSubmit","className","type","placeholder","value","onChange","target","TaskRow","task","toggleTask","name","checked","done","TaskTable","doneValue","tasks","showCompleted","filter","map","key","VisibilityControl","setShowCompleted","cleanTasks","isChecked","id","for","onClick","window","confirm","Container","children","App","tasksItems","setTasksItems","_useState3","_useState4","t","_objectSpread","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","taskName","find","concat","_toConsumableArray","ReactDOM","createRoot","document","getElementById","render"],"mappings":"uNA6BeA,MA1Bf,SAAoBC,GAAoB,IAAjBC,EAAaD,EAAbC,cAAaC,EACMC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAQlC,OACII,IAAAC,cAAA,QAAMC,SAAU,SAACC,GAAC,OAPD,SAACA,GAClBA,EAAEC,iBACFX,EAAcK,GACdC,EAAe,IAIQM,CAAaF,IAAIG,UAAU,YAC9CN,IAAAC,cAAA,OAAKK,UAAU,SACXN,IAAAC,cAAA,SACIM,KAAK,OACLC,YAAY,mBACZC,MAAOX,EACPY,SAAU,SAACP,GAAC,OAAKJ,EAAeI,EAAEQ,OAAOF,QACzCH,UAAU,kBAIlBN,IAAAC,cAAA,OAAKK,UAAU,SAAQN,IAAAC,cAAA,UAAQK,UAAU,0BAAyB,gBCP/DM,MAff,SAAgBpB,GAAsB,IAAnBqB,EAAIrB,EAAJqB,KAAMC,EAAUtB,EAAVsB,WACrB,OACId,IAAAC,cAAA,UACID,IAAAC,cAAA,MAAIK,UAAU,kCACTO,EAAKE,KACNf,IAAAC,cAAA,SACIM,KAAK,WACLS,QAASH,EAAKI,KACdP,SAAU,kBAAMI,EAAWD,SCehCK,MAtBf,SAAkB1B,GAAuC,IAC9B2B,EADNC,EAAK5B,EAAL4B,MAAON,EAAUtB,EAAVsB,WAAaO,EAAa7B,EAAb6B,cASrC,OACIrB,IAAAC,cAAA,SAAOK,UAAU,kEACbN,IAAAC,cAAA,aACID,IAAAC,cAAA,MAAIK,UAAU,iBACVN,IAAAC,cAAA,UAAI,WAIZD,IAAAC,cAAA,cAhBekB,EAgBOE,EAfnBD,EACFE,OAAO,SAACT,GAAI,OAAKA,EAAKI,OAASE,IAC/BI,IAAI,SAACV,GAAI,OACNb,IAAAC,cAACW,EAAO,CAACC,KAAMA,EAAMW,IAAKX,EAAKE,KAAMD,WAAYA,UCqBlDW,MA3Bf,SAA0BjC,GAA8C,IAA3CkC,EAAgBlC,EAAhBkC,iBAAkBC,EAAUnC,EAAVmC,WAAYC,EAASpC,EAAToC,UAQvD,OACI5B,IAAAC,cAAA,OAAKK,UAAU,2FACXN,IAAAC,cAAA,OAAKK,UAAU,0BACXN,IAAAC,cAAA,SACA4B,GAAG,gBACCvB,UAAU,mBACVC,KAAK,WACLG,SAAU,SAACP,GAAC,OAAKuB,EAAiBvB,EAAEQ,OAAOK,UAC3CA,QAASY,IAEb5B,IAAAC,cAAA,SAAO6B,IAAI,iBAAgB,mBAE/B9B,IAAAC,cAAA,UAAQ8B,QAnBK,WAEbC,OAAOC,QAAQ,uCACfN,KAgB+BrB,UAAU,yBAAwB,WCpBhE4B,EAAY,SAAH1C,GAAqB,IAAf2C,EAAQ3C,EAAR2C,SACxB,OACInC,IAAAC,cAAA,OAAKK,UAAU,kBACXN,IAAAC,cAAA,OAAKK,UAAU,wBAAwB6B,KCkEpCC,MA/Df,WAAe,IAAA1C,EACyBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzC2C,EAAUzC,EAAA,GAAE0C,EAAa1C,EAAA,GAAkB2C,EAER5C,oBAAS,GAAM6C,EAAA3C,YAAA0C,EAAA,GAAlDlB,EAAamB,EAAA,GAAEd,EAAgBc,EAAA,GAQhC1B,EAAa,SAACD,GAChByB,EACID,EAAWd,IAAI,SAACkB,GAAC,OACbA,EAAE1B,OAASF,EAAKE,KAAI2B,YAAA,GAAQD,EAAC,CAAExB,MAAOwB,EAAExB,OAASwB,MAsB7D,OAhBAE,oBAAU,WACN,IAAIC,EAAOC,aAAaC,QAAQ,SAC5BF,GACAN,EAAcS,KAAKC,MAAMJ,KAE9B,IAOHD,oBAAU,WACNE,aAAaI,QAAQ,QAASF,KAAKG,UAAUb,KAC9C,CAACA,IAGArC,IAAAC,cAAA,QAAMK,UAAU,6BACZN,IAAAC,cAACiC,EAAS,KACNlC,IAAAC,cAACV,EAAW,CAACE,cAlCzB,SAAuB0D,GACdd,EAAWe,KAAK,SAACvC,GAAI,OAAKA,EAAKE,OAASoC,KACzCb,EAAa,GAAAe,OAAAC,YAAKjB,GAAU,CAAE,CAAEtB,KAAMoC,EAAUlC,MAAM,SAiClDjB,IAAAC,cAACiB,EAAS,CACNE,MAAOiB,EACPvB,WAAYA,EACZO,eAAe,IAEnBrB,IAAAC,cAACwB,EAAiB,CACdG,UAAWP,EACXK,iBAAkB,SAACV,GAAO,OAAKU,EAAiBV,IAChDW,WArBG,WACfW,EAAcD,EAAWf,OAAO,SAACT,GAAI,OAAMA,EAAKI,QAChDS,GAAiB,MAsBRL,GACGrB,IAAAC,cAACiB,EAAS,CACNE,MAAOiB,EACPvB,WAAYA,EACZO,cAAeA,OCzD1BkC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAEG3D,IAAAC,cAACmC,EAAG","file":"static/js/main.4ed3c2e4.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nfunction TaskCreator({ createNewTask }) {\n    const [newTaskName, setNewTaskName] = useState(\"\"); // Se crea la variable newTaskName con un string vacio\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        createNewTask(newTaskName); // Esta función sale del argumento dado a TaskCreator en App.js\n        setNewTaskName(\"\");\n    };\n\n    return (\n        <form onSubmit={(e) => handleSubmit(e)} className=\"my-2 row\">\n            <div className=\"col-9\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter a new task\"\n                    value={newTaskName} // Con esto relaciono newTaskName con el valor del input\n                    onChange={(e) => setNewTaskName(e.target.value)} // Va cambiando de valor cada que se tipea\n                    className=\"form-control\"\n                />\n            </div>\n\n            <div className=\"col-3\"><button className=\"btn btn-primary btn-sm\">Save Task</button></div>\n        </form>\n    );\n}\n\nexport default TaskCreator;\n","import React from \"react\";\n\nfunction TaskRow({ task, toggleTask}) {\n    return (\n        <tr>\n            <td className=\"d-flex justify-content-between\">\n                {task.name}\n                <input\n                    type=\"checkbox\"\n                    checked={task.done}\n                    onChange={() => toggleTask(task)} // Con esto se cambia el valor de done\n                />\n            </td>\n        </tr>\n    );\n}\n\nexport default TaskRow;\n","import React from \"react\";\nimport TaskRow from \"./TaskRow\";\n\nfunction TaskTable({ tasks, toggleTask,  showCompleted}) {\n    const taskTableRows = (doneValue) => {\n        return tasks\n            .filter((task) => task.done === doneValue)\n            .map((task) => (\n                <TaskRow task={task} key={task.name} toggleTask={toggleTask} />\n            ));\n    };\n\n    return (\n        <table className=\"table table-dark table-striped table-bordered border-secondary\">\n            <thead>\n                <tr className=\"table-primary\">\n                    <th>Tasks</th>\n                </tr>\n            </thead>\n\n            <tbody>{taskTableRows(showCompleted)}</tbody>\n        </table>\n    );\n}\n\nexport default TaskTable;\n","import React from \"react\";\n\nfunction VisibilityControl({ setShowCompleted, cleanTasks, isChecked }) {\n    const handleDelete = () => {\n        // Metodo para preguntarle al usuario Y/n\n        if (window.confirm(\"Are you sure you want to delete it\")) {\n            cleanTasks();\n        }\n    };\n\n    return (\n        <div className=\"d-flex justify-content-between bg-secondary text-white text-center p-2 border-secondary\">\n            <div className=\"form-check form-switch\">\n                <input\n                id=\"showTasksDone\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    onChange={(e) => setShowCompleted(e.target.checked)}\n                    checked={isChecked}\n                />\n                <label for=\"showTasksDone\">Show Taks Done</label>\n            </div>\n            <button onClick={handleDelete} className=\"btn btn-danger btn-sm\">\n                Clear\n            </button>\n        </div>\n    );\n}\n\nexport default VisibilityControl;\n","import React from \"react\";\n\nexport const Container = ({ children }) => {\n    return (\n        <div className=\"container p-4 \">\n            <div className=\"col-md-4 offset-md-4\">{children}</div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TaskCreator from \"./components/TaskCreator\";\nimport TaskTable from \"./components/TaskTable\";\nimport VisibilityControl from \"./components/VisibilityControl\";\nimport {Container} from \"./components/Container\";\n\nfunction App() {\n    const [tasksItems, setTasksItems] = useState([]); // Se define taskItems como un arreglo vacio\n\n    const [showCompleted, setShowCompleted] = useState(false);\n\n    function createNewTask(taskName) {\n        if (!tasksItems.find((task) => task.name === taskName)) {\n            setTasksItems([...tasksItems, { name: taskName, done: false }]);\n        } // La función find busca si un valor corresponde a un valor de un arreglo, de ser así lo devulve, de lo contrario devuelve undefined\n    }\n\n    const toggleTask = (task) => {\n        setTasksItems(\n            tasksItems.map((t) =>\n                t.name === task.name ? { ...t, done: !t.done } : t\n            ) // Si la propiedad que le están pasando corresponde a una del arreglo, cambiará su propiedad done al contrario\n        );\n    };\n\n    // Este useEffect se ejecuta cada vez que la aplicación se inicia\n    useEffect(() => {\n        let data = localStorage.getItem(\"tasks\");\n        if (data) {\n            setTasksItems(JSON.parse(data));\n        }\n    }, []);\n\n    const cleanTasks = () => {\n        setTasksItems(tasksItems.filter((task) => !task.done));\n        setShowCompleted(false);\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"tasks\", JSON.stringify(tasksItems));\n    }, [tasksItems]);\n\n    return (\n        <main className=\"bg-dark vh-100 text-white\">\n            <Container>\n                <TaskCreator createNewTask={createNewTask} />\n                <TaskTable\n                    tasks={tasksItems}\n                    toggleTask={toggleTask}\n                    showCompleted={false}\n                />\n                <VisibilityControl\n                    isChecked={showCompleted}\n                    setShowCompleted={(checked) => setShowCompleted(checked)} // Aquí lo que realmente se pasa es una función que posterioremente será ejecutada\n                    cleanTasks={cleanTasks}\n                />\n\n                {showCompleted && (\n                    <TaskTable\n                        tasks={tasksItems}\n                        toggleTask={toggleTask}\n                        showCompleted={showCompleted}\n                    />\n                )}\n            </Container>\n        </main>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  // El strict mode haace que el useEffect se ejecute dos veces\n        <App />\n);\n"],"sourceRoot":""}